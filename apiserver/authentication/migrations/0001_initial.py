# Generated by Django 4.2.6 on 2023-10-26 14:03

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("username", models.CharField(max_length=128, unique=True)),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=255)),
                ("last_name", models.CharField(blank=True, max_length=255)),
                ("avatar", models.CharField(blank=True, max_length=255)),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Last Modified At"
                    ),
                ),
                ("last_location", models.CharField(blank=True, max_length=255)),
                ("created_location", models.CharField(blank=True, max_length=255)),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_managed", models.BooleanField(default=False)),
                ("is_password_expired", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_email_verified", models.BooleanField(default=False)),
                ("is_password_autoset", models.BooleanField(default=False)),
                (
                    "last_active",
                    models.DateTimeField(default=django.utils.timezone.now, null=True),
                ),
                ("last_login_time", models.DateTimeField(null=True)),
                ("last_logout_time", models.DateTimeField(null=True)),
                ("last_login_ip", models.CharField(blank=True, max_length=255)),
                ("last_logout_ip", models.CharField(blank=True, max_length=255)),
                ("last_login_medium", models.CharField(default="email", max_length=20)),
                ("my_issues_prop", models.JSONField(null=True)),
                ("role", models.CharField(blank=True, max_length=300, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
                "ordering": ("-created_at",),
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
